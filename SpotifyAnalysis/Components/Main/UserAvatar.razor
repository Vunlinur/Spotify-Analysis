@namespace SpotifyAnalysis.Components
@implements IDisposable

@using SpotifyAnalysis.Data
@using SpotifyAnalysis.Data.SpotifyAPI


<MudButton Variant=Variant.Outlined OnClick=@OnClick>
    <MudText Class="pr-2">@Descriptor</MudText>
    <MudAvatar Size="Size.Small">
        <MudImage Src=@GetAvatar() />
    </MudAvatar>
    <MudText Typo="Typo.subtitle1" Class="pl-2">@GetUserName()</MudText>
</MudButton>


@code {
    [Parameter, EditorRequired]
    public string Descriptor { get; set; }
    [Parameter, EditorRequired]
    public string DefaultText { get; set; }
    [Parameter, EditorRequired]
    public IUserContainer UserContainer { get; set; }
    [Parameter]
    public EventCallback OnClick { get; set; }

    protected override void OnInitialized() {
        base.OnInitialized();
        UserContainer.UserChanged += Refresh;
    }

    public void Dispose() => UserContainer.UserChanged -= Refresh;

    string GetAvatar() => UserContainer.UserDTO?.Images?.LastOrDefault()?.Url ?? StaticResourceMap.UnknownUser;

    string GetUserName() => UserContainer.UserDTO?.Name ?? DefaultText;

    async void Refresh(object _) => await InvokeAsync(StateHasChanged);
}
