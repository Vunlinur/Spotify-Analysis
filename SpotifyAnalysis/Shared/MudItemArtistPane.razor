@using MudBlazor
@using Data.DTO

<MudItemBase>
	@if (Artist?.Genres is not null) {
		<MudStack Row=true Class="full-height" Justify="Justify.SpaceBetween" AlignItems="AlignItems.Stretch">
			<MudStack Justify="Justify.SpaceBetween" AlignItems="AlignItems.Stretch">
				<MudInputLabel Class="mudItemTitle">@Artist.Name</MudInputLabel>
				<MudDataGrid Items="@Artist.Genres" Style="width: 300px" Dense=true >
					<Columns>
						<PropertyColumn Property="x => x" Title="Genres:" HeaderStyle="font-size: 16px ;width: 120px" />
					</Columns>
				</MudDataGrid>
				<div /> <!--for Justify.SpaceBetween to look better-->
			</MudStack>
			<MudStack Justify="Justify.SpaceBetween" AlignItems="AlignItems.Center">
				<OpenInSpotify Id=@Artist.ID ResType=OpenInSpotify.ResourceType.Artist/>
				<MudImage Style="border: solid 1px white;" Src=@GetImage() Width="300" Height="300" Elevation="25" Class="ma-4" />
				<MudStack Class="full-width" AlignItems="AlignItems.Center">
					<MudInputLabel Style="font-size: 16px">Popularity</MudInputLabel>
					<MudProgressLinear Color="Color.Primary" Size="Size.Large" Value=@(Artist.Popularity ?? 0) />
				</MudStack>
			</MudStack>
		</MudStack>
	}
</MudItemBase>

@code {
	[Parameter]
	public ArtistDTO Artist { get; set; }

	internal string GetImage() => Artist.Images.FirstOrDefault()?.Url ?? StaticResourceMap.UnknownArtist;
}
